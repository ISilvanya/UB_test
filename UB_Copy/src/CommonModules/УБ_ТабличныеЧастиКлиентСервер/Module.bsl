//Источник ТабличныеЧастиУНФ
#Область ПрограммныйИнтерфейс

// Удаляет строки по ключу связи в таблице документа или обработки
//
// Параметры:
//  ТабличнаяЧасть		 - ДанныеФормыКоллекция	 - Таблица формы, в которой следует заполнить ключ связи
//  СтрокаТабличнойЧасти - ДанныеФормыСтруктура	 - Данные текущей строки таблицы формы
//  ИмяРеквизитаСвязи	 - Строка				 - Имя реквизита ключа связи в ТЧ
//
Процедура УдалитьСтрокиПоКлючуСвязи(ТабличнаяЧасть, СтрокаТабличнойЧасти, ИмяРеквизитаСвязи = "КлючСвязи") Экспорт
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить(ИмяРеквизитаСвязи, СтрокаТабличнойЧасти[ИмяРеквизитаСвязи]);
	
	УдаляемыеСтроки = ТабличнаяЧасть.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТаблицы Из УдаляемыеСтроки Цикл
		
		ТабличнаяЧасть.Удалить(СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает массив найденных строк по заданному ключу связи
//
// Параметры:
//  ТабличнаяЧасть		 - ДанныеФормыКоллекция	 - Таблица формы, в которой следует заполнить ключ связи
//  КлючСвязи			 - Число				 - Искомое значение ключа связи
//  ИмяРеквизитаСвязи	 - Строка				 - Имя реквизита ключа связи в ТЧ
// 
// Возвращаемое значение:
//  Массив - Коллекция найденных строк табличной части
//
Функция СтрокиПоКлючуСвязи(ТабличнаяЧасть, КлючСвязи, ИмяРеквизитаСвязи = "КлючСвязи") Экспорт
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить(ИмяРеквизитаСвязи, КлючСвязи);
	Возврат ТабличнаяЧасть.НайтиСтроки(СтруктураОтбора);
	
КонецФункции

// Создает новый ключ связи для таблиц.
//
// Параметры:
//  ФормаДокумента - ФормаКлиентскогоПриложения - Форма документа, реквизиты которой обрабатываются процедурой.
//
// Возвращаемое значение:
//  Число - Следующий ключ связи для таблицы
//
Функция СоздатьНовыйКлючСвязи(ФормаДокумента, ИмяРеквизитаСвязи = "КлючСвязи") Экспорт

	СписокЗначений = Новый СписокЗначений;
	
	ТабличнаяЧасть = ФормаДокумента.Объект[ФормаДокумента.ИмяТабличнойЧасти];
	Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
        СписокЗначений.Добавить(СтрокаТЧ[ИмяРеквизитаСвязи]);
	КонецЦикла;

    Если СписокЗначений.Количество() = 0 Тогда
		КлючСвязи = 1;
	Иначе
		СписокЗначений.СортироватьПоЗначению();
		КлючСвязи = СписокЗначений.Получить(СписокЗначений.Количество() - 1).Значение + 1;
	КонецЕсли;

	Возврат КлючСвязи;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// ++( 00-00365291
// Создает новый ключ связи для таблицы
//
// Параметры:
//  Таблица - ТаблицаЗначений - Таблица, для которой создается новый ключ связи
//
// Возвращаемое значение:
//  Число - Следующий ключ связи для таблицы
//
Функция СоздатьНовыйКлючСвязиДляТаблицы(Таблица) Экспорт
	
	СписокЗначений = Новый СписокЗначений;
	
	ТабличнаяЧасть = Таблица;
	Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
        СписокЗначений.Добавить(СтрокаТЧ.КлючСвязи);
	КонецЦикла;

    Если СписокЗначений.Количество() = 0 Тогда
		КлючСвязи = 1;
	Иначе
		СписокЗначений.СортироватьПоЗначению();
		КлючСвязи = СписокЗначений.Получить(СписокЗначений.Количество() - 1).Значение + 1;
	КонецЕсли;

	Возврат КлючСвязи;	
	
КонецФункции
// )++ 00-00365291
#КонецОбласти


 
