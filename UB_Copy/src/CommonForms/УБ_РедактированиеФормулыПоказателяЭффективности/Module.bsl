
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Формула = Параметры.Формула;
	НаименованиеПоказателя = Параметры.НаименованиеПоказателя;
	ПоказательЭффективности = Параметры.ПоказательЭффективности;
	
	Заголовок = НСтр("ru = 'Редактирование формулы (%1)'");
	Если ПустаяСтрока(НаименованиеПоказателя) Тогда
		Заголовок = СтрЗаменить(Заголовок, "(%1)", "");
	КонецЕсли;
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Заголовок, НаименованиеПоказателя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьТекстВПозициюКурсора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПоказатели

&НаКлиенте
Процедура ПоказателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Показатели.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьВФормулу(ТекущиеДанные.Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ТекущиеДанные = Элементы.Показатели.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = ТекущиеДанные.Идентификатор;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулу(Команда)
	
	ОчиститьСообщения();
	Результаты = РезультатыРедактирования(Формула, ПоказательЭффективности);
	Если Результаты <> Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Проверка формулы завершена успешно'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоказательВФормулу(Команда)
	
	ТекущиеДанные = Элементы.Показатели.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьВФормулу(ТекущиеДанные.Идентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОчиститьСообщения();
	Результаты = РезультатыРедактирования(Формула, ПоказательЭффективности);
	
	Если Результаты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	Закрыть(Результаты);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РезультатыРедактирования(Формула, ПоказательЭффективности)
	
	Результаты = Новый Структура;
	Результаты.Вставить("Формула", Формула);
	
	Отказ = Ложь;
	
	ПараметрыВыполненияФормулы = УБ_РасчетПоказателейЭффективности.ПараметрыВыполненияФормулы(Формула, Истина);
	Если ПараметрыВыполненияФормулы = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		ПроверитьЗацикливаниеПоказателейФормулы(ПоказательЭффективности,
			ПараметрыВыполненияФормулы.ПоказателиФормулы,
			Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		Возврат Результаты;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПроверитьЗацикливаниеПоказателейФормулы(ЦелевойПоказатель, Знач ПоказателиФормулы, Отказ)
	
	Счетчик = 0;
	Пока Счетчик < ПоказателиФормулы.Количество() Цикл
		
		Показатель = ПоказателиФормулы[Счетчик];
		
		Если Показатель = ЦелевойПоказатель Тогда
			ТекстСообщения = НСтр("ru = 'Обнаружено зацикливание показателя в формуле'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			Прервать;
		КонецЕсли;
		
		Если Не Показатель.ИспользоватьФормулу Тогда
			Счетчик = Счетчик + 1;
			Продолжить;
		КонецЕсли;
		
		ПараметрыВыполненияФормулы = УБ_РасчетПоказателейЭффективности.ПараметрыВыполненияФормулы(
			Показатель.ФормулаРасчета, Ложь);
		Если ПараметрыВыполненияФормулы <> Неопределено Тогда
			
			Для Каждого ЭлементПоказатель Из ПараметрыВыполненияФормулы.ПоказателиФормулы Цикл
				Если ПоказателиФормулы.Найти(ЭлементПоказатель) = Неопределено Тогда
					ПоказателиФормулы.Добавить(ЭлементПоказатель);
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при получении параметров формулы для показателя ""%1""'"),
				Показатель.Идентификатор);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(ПоказателиФормулы, Показатель);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВФормулу(Идентификатор)
	
	УстановитьТекстВПозициюКурсора(Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстВПозициюКурсора(Текст = "")
	
	НачальнаяСтрокаВыделения = 0;
	НачальнаяКолонкаВыделения = 0;
	КонечнаяСтрокаВыделения = 0;
	КонечнаяКолонкаВыделения = 0;
	
	Элементы.Формула.ПолучитьГраницыВыделения(НачальнаяСтрокаВыделения, НачальнаяКолонкаВыделения,
		КонечнаяСтрокаВыделения, КонечнаяКолонкаВыделения);
	
	Если ПустаяСтрока(Текст) Тогда
		НачальнаяКолонкаВыделения = НачальнаяКолонкаВыделения + СтрДлина(Формула);
	Иначе
		Элементы.Формула.ВыделенныйТекст = Текст;
		Модифицированность = Истина;
		
		НачальнаяКолонкаВыделения = НачальнаяКолонкаВыделения + СтрДлина(Текст);
	КонецЕсли;
	
	Элементы.Формула.УстановитьГраницыВыделения(НачальнаяСтрокаВыделения, НачальнаяКолонкаВыделения,
		НачальнаяСтрокаВыделения, НачальнаяКолонкаВыделения);
	
КонецПроцедуры

#КонецОбласти
