
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Адреса = АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище();
	АдресНастроекКомпоновкиДанныхПлана = Адреса.НастройкиКомпоновкиДанныхПлана;
	АдресНастроекКомпоновкиДанныхФакта = Адреса.НастройкиКомпоновкиДанныхФакта;
	АдресСхемыКомпоновкиДанныхПлана = Адреса.СхемаКомпоновкиДанныхПлана;
	АдресСхемыКомпоновкиДанныхФакта = Адреса.СхемаКомпоновкиДанныхФакта;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПустаяСтрока(АдресСхемыКомпоновкиДанныхПлана) Тогда
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанныхПлана = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(
			АдресСхемыКомпоновкиДанныхПлана));
	Иначе
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанныхПлана = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	Если Не ПустаяСтрока(АдресСхемыКомпоновкиДанныхФакта) Тогда
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанныхФакта = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(
			АдресСхемыКомпоновкиДанныхФакта));
	Иначе
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанныхФакта = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	Если Не ПустаяСтрока(АдресНастроекКомпоновкиДанныхПлана) Тогда
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанныхПлана = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(
			АдресНастроекКомпоновкиДанныхПлана));
	Иначе
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанныхПлана = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	Если Не ПустаяСтрока(АдресНастроекКомпоновкиДанныхФакта) Тогда
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанныхФакта = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(
			АдресНастроекКомпоновкиДанныхФакта));
	Иначе
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанныхФакта = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбластьОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхПлана(Команда)
	
	ПараметрыФормы = СформироватьПараметрыФормыРедактированияСхемыСбораДанных(Ложь);
	
	ДополнительныеПараметры = Новый Структура("ЭтоСхемаСбораДанныхФакта", Ложь);
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактироватьСхемуКомпоновкиДанныхЗавершение", ЭтотОбъект,
		ДополнительныеПараметры);
	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных", ПараметрыФормы, , , , , ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
	
&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхФакта(Команда)
	
	ПараметрыФормы = СформироватьПараметрыФормыРедактированияСхемыСбораДанных(Истина);
	
	ДополнительныеПараметры = Новый Структура("ЭтоСхемаСбораДанныхФакта", Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактироватьСхемуКомпоновкиДанныхЗавершение", ЭтотОбъект,
		ДополнительныеПараметры);
	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных", ПараметрыФормы, , , , , ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	АдресаНастроек = Результат;
	ЭтоСхемаСбораДанныхФакта = ДополнительныеПараметры.ЭтоСхемаСбораДанныхФакта;
	
	Если ЗначениеЗаполнено(АдресаНастроек) Тогда
		
		Если ЭтоСхемаСбораДанныхФакта Тогда
			ЭлементСхемаКомпоновки = Элементы.СхемаКомпоновкиДанныхФакта;
		Иначе
			ЭлементСхемаКомпоновки = Элементы.СхемаКомпоновкиДанныхПлана;
		КонецЕсли;
		
		Если ПустаяСтрока(АдресаНастроек.ИмяТекущегоШаблонаСКД)
			И ЭлементСхемаКомпоновки.СписокВыбора.НайтиПоЗначению("") = Неопределено Тогда
			
			ЭлементСхемаКомпоновки.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));
			
		КонецЕсли;
		
		Если ЭтоСхемаСбораДанныхФакта Тогда
			Запись.СхемаКомпоновкиДанныхФакта = АдресаНастроек.ИмяТекущегоШаблонаСКД;
		Иначе
			Запись.СхемаКомпоновкиДанныхПлана = АдресаНастроек.ИмяТекущегоШаблонаСКД;
		КонецЕсли;
		
		Если АдресаНастроек.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
			Если ЭтоСхемаСбораДанныхФакта Тогда
				АдресНастроекКомпоновкиДанныхФакта = АдресаНастроек.АдресХранилищаНастройкиКомпоновщика;
			Иначе
				АдресНастроекКомпоновкиДанныхПлана = АдресаНастроек.АдресХранилищаНастройкиКомпоновщика;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище()
	
	Адреса = РегистрыСведений.УБ_СхемыСбораДанныхПоказателейЭффективности.АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(Запись);
	Возврат Адреса;
	
КонецФункции

&НаСервере
Функция СформироватьПараметрыФормыРедактированияСхемыСбораДанных(ЭтоСхемаСбораДанныхФакта)
	
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Настройка шаблона расчета для показателя эффективности ""%1""'"),
		Запись.ПоказательЭффективности.Наименование);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НеПомещатьНастройкиВСхемуКомпоновкиДанных", Истина);
	ПараметрыФормы.Вставить("НеРедактироватьСхемуКомпоновкиДанных", Ложь);
	ПараметрыФормы.Вставить("НеНастраиватьУсловноеОформление", Истина);
	ПараметрыФормы.Вставить("НеНастраиватьВыбор", Истина);
	ПараметрыФормы.Вставить("НеНастраиватьПорядок", Ложь);
	ПараметрыФормы.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыФормы.Вставить("Заголовок", ЗаголовокФормыНастройкиСхемыКомпоновкиДанных);
	ПараметрыФормы.Вставить("ИсточникШаблонов", Запись.ПоказательЭффективности.Ссылка);
	ПараметрыФормы.Вставить("ВозвращатьИмяТекущегоШаблонаСКД", Истина);
	
	Если ЭтоСхемаСбораДанныхФакта Тогда
		ПараметрыФормы.Вставить("АдресСхемыКомпоновкиДанных", АдресСхемыКомпоновкиДанныхФакта);
		ПараметрыФормы.Вставить("АдресНастроекКомпоновкиДанных", АдресНастроекКомпоновкиДанныхФакта);
		ПараметрыФормы.Вставить("ИмяШаблонаСКД", Запись.СхемаКомпоновкиДанныхФакта);
	Иначе
		ПараметрыФормы.Вставить("АдресСхемыКомпоновкиДанных", АдресСхемыКомпоновкиДанныхПлана);
		ПараметрыФормы.Вставить("АдресНастроекКомпоновкиДанных", АдресНастроекКомпоновкиДанныхПлана);
		ПараметрыФормы.Вставить("ИмяШаблонаСКД", Запись.СхемаКомпоновкиДанныхПлана);
	КонецЕсли;
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаСервере
Процедура ВариантРасчетаЗначенияПланаПриИзмененииНаСервере()
	Если Запись.ВариантРасчетаЗначенияПлана = Перечисления.УБ_ВариантыРасчетаЗначенийПоказателя.ИзСхемыПоказателя Тогда
		Элементы.РедактироватьСхемуКомпоновкиДанныхПлана.Видимость = Истина;
	Иначе
		Элементы.РедактироватьСхемуКомпоновкиДанныхПлана.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВариантРасчетаЗначенияПланаПриИзменении(Элемент)
	ВариантРасчетаЗначенияПланаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВариантРасчетаЗначенияФактаПриИзмененииНаСервере()
	Если Запись.ВариантРасчетаЗначенияФакта = Перечисления.УБ_ВариантыРасчетаЗначенийПоказателя.ИзСхемыПоказателя Тогда
		Элементы.РедактироватьСхемуКомпоновкиДанныхФакта.Видимость = Истина;
	Иначе
		Элементы.РедактироватьСхемуКомпоновкиДанныхФакта.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВариантРасчетаЗначенияФактаПриИзменении(Элемент)
	ВариантРасчетаЗначенияФактаПриИзмененииНаСервере();
КонецПроцедуры


#КонецОбласти
