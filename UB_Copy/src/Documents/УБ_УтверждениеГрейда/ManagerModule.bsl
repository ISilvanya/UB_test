#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд отчетов.
//
// Параметры:
//     КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для   изменения.
//         См. описание 1 параметра процедуры   ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//     Параметры - Структура - Вспомогательные параметры. Для чтения.
//         См. описание 2 параметра процедуры   ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов,   Параметры) Экспорт
	
	Если ПравоДоступа("Просмотр", Метаданные.Обработки.УБ_СравнениеВерсийГрейда) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		КомандаОтчет.Представление = НСтр("ru = 'Сравнение версий грейда'");
		КомандаОтчет.Важность = "Важное";
		КомандаОтчет.ВидимостьВФормах = "ФормаДокумента";
		КомандаОтчет.МножественныйВыбор = Ложь;
		КомандаОтчет.РежимЗаписи = "Проводить";
		КомандаОтчет.Менеджер = Метаданные.Обработки.УБ_СравнениеВерсийГрейда.ПолноеИмя();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаСоставПоказателейМоделейПланирования(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСоставСтандартовМоделейПланирования(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВерсииГрейдов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасценкиПоказателейЭффективности(Запрос, ТекстыЗапроса, Регистры);
	
	УБ_ПроведениеСервер.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ДанныеДокумента.Дата КАК Период,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.МодельПланированияЭффективности КАК МодельПланированияЭффективности,
		|	ДанныеДокумента.Грейд КАК Грейд,
		|	ДанныеДокумента.ВерсияГрейда КАК ВерсияГрейда,
		|	ДанныеДокумента.ШкалаПоказателей КАК ШкалаПоказателей,
		|	ДанныеДокумента.Статус КАК Статус,
		|	ДанныеДокумента.ДатаУтверждения КАК ДатаУтверждения
		|ИЗ
		|	Документ.УБ_УтверждениеГрейда КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("МодельПланированияЭффективности", Реквизиты.МодельПланированияЭффективности);
	Запрос.УстановитьПараметр("Грейд", Реквизиты.Грейд);
	Запрос.УстановитьПараметр("ВерсияГрейда", Реквизиты.ВерсияГрейда);
	Запрос.УстановитьПараметр("ШкалаПоказателей", Реквизиты.ШкалаПоказателей);
	Запрос.УстановитьПараметр("Статус", Реквизиты.Статус);
	Запрос.УстановитьПараметр("ДатаУтверждения", Реквизиты.ДатаУтверждения);
	Запрос.УстановитьПараметр("Документ", Реквизиты.Ссылка);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСоставПоказателейМоделейПланирования(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СоставПоказателейМоделейПланирования";
	
	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&ДатаУтверждения КАК Период,
		|	&МодельПланированияЭффективности КАК МодельПланированияЭффективности,
		|	&Грейд КАК Грейд,
		|	&ВерсияГрейда КАК ВерсияГрейда,
		|	ТаблицаПоказатели.ПоказательЭффективности КАК ПоказательЭффективности,
		|	ТаблицаПоказатели.Вес КАК Вес,
		|	ТаблицаПоказатели.План КАК План,
		|	ТаблицаПоказатели.КритическоеЗначение КАК КритическоеЗначение,
		|	ТаблицаПоказатели.МинимальноеЗначениеРезультата КАК МинимальноеЗначениеРезультата,
		|	ТаблицаПоказатели.МаксимальноеЗначениеРезультата КАК МаксимальноеЗначениеРезультата,
		|	ТаблицаПоказатели.ШкалаПоказателей КАК ШкалаПоказателей,
		|	ТаблицаПоказатели.ВидРасценки КАК ВидРасценки,
		|	ТаблицаПоказатели.РассчитыватьРезультатОтФакта КАК РассчитыватьРезультатОтФакта,
		|	ТаблицаПоказатели.Фиксированный КАК Фиксированный,
		|	ТаблицаПоказатели.НегативноеОтклонениеНормыДо КАК НегативноеОтклонениеНормыДо,
		|	ТаблицаПоказатели.ПограничноеОтклонениеНормыОт КАК ПограничноеОтклонениеНормыОт,
		|	ТаблицаПоказатели.ПограничноеОтклонениеНормыДо КАК ПограничноеОтклонениеНормыДо,
		|	ТаблицаПоказатели.ПозитивноеОтклонениеНормыОт КАК ПозитивноеОтклонениеНормыОт,
		|	ТаблицаПоказатели.ПериодичностьРасчета КАК ПериодичностьРасчета,
		|	ТаблицаПоказатели.ОграничиватьМинимальноеЗначениеРезультата КАК ОграничиватьМинимальноеЗначениеРезультата,
		|	ТаблицаПоказатели.ОграничиватьМаксимальноеЗначениеРезультата КАК ОграничиватьМаксимальноеЗначениеРезультата,
		|	ТаблицаПоказатели.ТипПоказателя КАК ТипПоказателя,
		|	ТаблицаПоказатели.Расценка КАК Расценка
		|ИЗ
		|	Документ.УБ_УтверждениеГрейда.Показатели КАК ТаблицаПоказатели
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УБ_ПоказателиЭффективности КАК РеквизитыПоказателиЭффективности
		|		ПО ТаблицаПоказатели.ПоказательЭффективности = РеквизитыПоказателиЭффективности.Ссылка
		|ГДЕ
		|	ТаблицаПоказатели.Ссылка = &Ссылка
		|	И &Статус = ЗНАЧЕНИЕ(Перечисление.УБ_СтатусыМоделейПланирования.Действует)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаПоказатели.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСоставСтандартовМоделейПланирования(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СоставСтандартовМоделейПланирования";
	
	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&ДатаУтверждения КАК Период,
		|	&МодельПланированияЭффективности КАК МодельПланированияЭффективности,
		|	&Грейд КАК Грейд,
		|	&ВерсияГрейда КАК ВерсияГрейда,
		|	ТаблицаСтандарты.Стандарт КАК Стандарт,
		|	ТаблицаСтандарты.ШкалаОценок КАК ШкалаОценок,
		|	ТаблицаСтандарты.Вес КАК Вес
		|ИЗ
		|	Документ.УБ_УтверждениеГрейда.Стандарты КАК ТаблицаСтандарты
		|ГДЕ
		|	ТаблицаСтандарты.Ссылка = &Ссылка
		|	И &Статус = ЗНАЧЕНИЕ(Перечисление.УБ_СтатусыМоделейПланирования.Действует)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВерсииГрейдов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВерсииГрейдов";
	
	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДанныеДокумента.ДатаУтверждения КАК Период,
		|	ДанныеДокумента.МодельПланированияЭффективности КАК МодельПланированияЭФфективности,
		|	ДанныеДокумента.Грейд КАК Грейд,
		|	ДанныеДокумента.ВерсияГрейда КАК ВерсияГрейда,
		|	ДанныеДокумента.ВариантРасчетаПремии КАК ВариантРасчетаПремии,
		|	ДанныеДокумента.ШкалаПоказателей КАК ШкалаПоказателей,
		|	ДанныеДокумента.Статус КАК Статус,
		|	ДанныеДокумента.ПоказательРасчетаЗарплатыПриБезокладнойСистеме КАК ПоказательРасчетаЗарплатыПриБезокладнойСистеме,
		|	ДанныеДокумента.ПериодРасчетаМоделиПланирования КАК ПериодРасчетаМоделиПланирования,
		|	NULL КАК Поле1,
		|	ДанныеДокумента.ПредельныйКоэффициент КАК ПредельныйКоэффициент
		|ИЗ
		|	Документ.УБ_УтверждениеГрейда КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаУтверждения, ДЕНЬ, -1), ДЕНЬ),
		|	ПредыдущиеВерсииГрейда.МодельПланированияЭффективности,
		|	ПредыдущиеВерсииГрейда.Грейд,
		|	ПредыдущиеВерсииГрейда.ВерсияГрейда,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЗНАЧЕНИЕ(Перечисление.УБ_СтатусыМоделейПланирования.Закрыто),
		|	НЕОПРЕДЕЛЕНО,
		|	NULL,
		|	НЕОПРЕДЕЛЕНО,
		|	ПредыдущиеВерсииГрейда.ПредельныйКоэффициент
		|ИЗ
		|	РегистрСведений.УБ_ВерсииГрейдов.СрезПоследних(
		|			&ДатаУтверждения,
		|			Регистратор <> &Ссылка
		|				И МодельПланированияЭффективности = &МодельПланированияЭффективности
		|				И Грейд = &Грейд) КАК ПредыдущиеВерсииГрейда
		|ГДЕ
		|	&Статус = ЗНАЧЕНИЕ(Перечисление.УБ_СтатусыМоделейПланирования.Действует)
		|	И ПредыдущиеВерсииГрейда.Статус = ЗНАЧЕНИЕ(Перечисление.УБ_СтатусыМоделейПланирования.Действует)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаЗакрытия, ДЕНЬ),
		|	ДанныеДокумента.МодельПланированияЭффективности,
		|	ДанныеДокумента.Грейд,
		|	ДанныеДокумента.ВерсияГрейда,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ЗНАЧЕНИЕ(Перечисление.УБ_СтатусыМоделейПланирования.Закрыто),
		|	НЕОПРЕДЕЛЕНО,
		|	ДанныеДокумента.ПериодРасчетаМоделиПланирования,
		|	NULL,
		|	ДанныеДокумента.ПредельныйКоэффициент
		|ИЗ
		|	Документ.УБ_УтверждениеГрейда КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.ГрейдЗакрыт
		|	И ДанныеДокумента.Ссылка = &Документ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасценкиПоказателейЭффективности(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасценкиПоказателейЭффективности";
	
	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&ДатаУтверждения КАК Период,
		|	&Организация КАК Организация,
		|	&Подразделение КАК Подразделение,
		|	&МодельПланированияЭффективности КАК МодельПланирования,
		|	&Грейд КАК Грейд,
		|	&ВерсияГрейда КАК ВерсияГрейда,
		|	ТаблицаПоказатели.ПоказательЭффективности КАК Показатель,
		|	ТаблицаПоказатели.Расценка КАК Расценка
		|ИЗ
		|	Документ.УБ_УтверждениеГрейда.Показатели КАК ТаблицаПоказатели
		|ГДЕ
		|	ТаблицаПоказатели.Ссылка = &Ссылка
		|	И &Статус = ЗНАЧЕНИЕ(Перечисление.УБ_СтатусыМоделейПланирования.Действует)
		|	И ТаблицаПоказатели.Расценка <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбновлениеИнформационнойБазы

Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.УБ_УтверждениеГрейда.ОбработатьДанныеДляПереходаНаНовуюВерсию_2_0_2_3";
	Обработчик.Версия = "2.0.2.3";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Комментарий = НСтр("ru = 'Заполнение нового реквизита документа УБ_УтверждениеГрейда и соответствующих записей регистра'");
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию_2_0_2_3(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УБ_УтверждениеГрейда.Ссылка КАК Документ
	               |ИЗ
	               |	Документ.УБ_УтверждениеГрейда КАК УБ_УтверждениеГрейда";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		УтверждениеОбъект = Выборка.Документ.ПолучитьОбъект();
		Для каждого Строка из УтверждениеОбъект.Показатели Цикл
			Если Не ЗначениеЗаполнено(Строка.ТипПоказателя) Тогда
				Строка.ТипПоказателя = Строка.ПоказательЭффективности.ТипПоказателя;
			КонецЕсли;
			Если ЗначениеЗаполнено(Строка.ФормулаРасчета) и УтверждениеОбъект.ФормулыРасчета.Количество() = 0 Тогда
				НоваяФормула = УтверждениеОбъект.ФормулыРасчета.Добавить();
				НоваяФормула.Ячейка = "Сумма";
				НоваяФормула.ФормулаРасчета = Строка.ФормулаРасчета;
				НоваяФормула.ПоказательЭффективности = Строка.ПоказательЭффективности;
				НоваяФормула.ТипПоказателя = Строка.ТипПоказателя;
			КонецЕсли;
			Отбор = Новый Структура;
			Отбор.Вставить("ТипПоказателя",Строка.ТипПоказателя);
			Если УтверждениеОбъект.ТипыПоказателей.НайтиСтроки(Отбор).Количество() = 0 Тогда
				НовыйТипПоказателя = УтверждениеОбъект.ТипыПоказателей.Добавить();
				НовыйТипПоказателя.ТипПоказателя = Строка.ТипПоказателя;
				НовыйТипПоказателя.ШкалаПоказателя = УтверждениеОбъект.ШкалаПоказателей;
			КонецЕсли;	
		КонецЦикла;
		
		УтверждениеОбъект.Записать();
		
		Если УтверждениеОбъект.Проведен Тогда
		
			РегистрыСведений.УБ_ФормулыПоказателейЭффективности.ОтразитьФормулыПоказателейЭффективности(УтверждениеОбъект.Ссылка);
			РегистрыСведений.УБ_УстановленныеШкалыПоказателей.ОтразитьШкалыПоказателей(УтверждениеОбъект.Ссылка);
			
		КонецЕсли;	
			
	КонецЦикла;
	
	
	
КонецПроцедуры

#КонецОбласти

