#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Показатели") Тогда
		Для каждого Строка из Параметры.Показатели Цикл
			СписокВыбраных.Добавить(Строка);	
		КонецЦикла;	
	КонецЕсли;        
	// ШОО++ 13.06.2023
	Если Параметры.Свойство("ТипыПоказателейДокумента") Тогда
		Для каждого Строка из Параметры.ТипыПоказателейДокумента Цикл
			ТипыПоказателейДокумента.Добавить(Строка);	
		КонецЦикла;	
	КонецЕсли;        
	// ШОО--
	
	Если Параметры.Свойство("УникальныйИдентификатор") Тогда
		НомерФормыВладельца = Параметры.УникальныйИдентификатор;	
	КонецЕсли;
	
	//СтруктураСвойствСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка(); 		
	//ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.ПоказателиЭффективности, СтруктураСвойствСписка);
	
	// Установка видимости элементов
	Элементы.ПоказателиЭффективностиСоздать.Видимость = Ложь;
	Элементы.ПоказателиЭффективностиСоздать.Доступность = Ложь;
	Элементы.ПоказателиЭффективностиСоздатьГруппу.Видимость = Ложь;
	Элементы.ПоказателиЭффективностиСоздатьГруппу.Доступность = Ложь;
	Элементы.ПоказателиЭффективностиСкопировать.Видимость = Ложь;
	Элементы.ПоказателиЭффективностиСкопировать.Доступность = Ложь;	
	
	МассивВыбора = СформироватьМассив();
	ОграничитьСоставПоказателейЭфективности(МассивВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	//МассивВыбора = СформироватьМассив();
	//Оповестить("ВыборПоказателейДерево",Новый Структура("ОтобранныеПоказатели,УникальныйИдентификатор",МассивВыбора,НомерФормыВладельца));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказателиЭффективностиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МассивДляПередачи = Новый Массив;
	
	ТекущиеДанные = Элементы.ПоказателиЭффективности.ТекущиеДанные;
	
	Для каждого ЭлементМассива Из ВыбраннаяСтрока Цикл
		Если НЕ ПоказательГруппа(Элементы.ПоказателиЭффективности.ДанныеСтроки(ЭлементМассива).Ссылка) Тогда
			НоваяСтрока = ВыбранныеПоказатели.Добавить();
			НоваяСтрока.Показатель = ЭлементМассива;
		КонецЕсли;
	КонецЦикла;
	МассивВыбора = СформироватьМассив();
	ОграничитьСоставПоказателейЭфективности(МассивВыбора);

КонецПроцедуры

Функция ПоказательГруппа(ТипПоказателя)
	Возврат ТипПоказателя.ЭтоГруппа;
КонецФункции	

&НаКлиенте
Процедура ПоказателиЭффективностиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)

	НоваяСтрока = ВыбранныеПоказатели.Добавить();
	НоваяСтрока.Показатель = Значение.Показатель;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОграничитьСоставПоказателейЭфективности(МассивВыбора)
	
	ПоказателиЭффективности.Отбор.Элементы.Очистить();
		
	ЭлементОтбора = ПоказателиЭффективности.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = МассивВыбора;
	
	// ШОО++ 13.06.2023     
	Если ТипыПоказателейДокумента.Количество() > 0 Тогда
		ЭлементОтбора = ПоказателиЭффективности.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипПоказателя");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ТипыПоказателейДокумента;
	КонецЕсли;
   	// ШОО--
	
	ЭлементОтбора = ПоказателиЭффективности.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = Ложь;
	
	ЭлементОтбора = ПоказателиЭффективности.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СостояниеПоказателя");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = Перечисления.УБ_СостоянияПоказателейЭффективности.Архивный;
	
	ЭлементОтбора = ПоказателиЭффективности.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = СписокВыбраных;
	
КонецПроцедуры	

&НаСервере
Функция СформироватьМассив()	
	
	МассивВыбора = Новый Массив;
	Для каждого Строка из ВыбранныеПоказатели Цикл
		МассивВыбора.Добавить(Строка.Показатель);	  
	КонецЦикла;
	
	Возврат МассивВыбора;
	
КонецФункции

&НаКлиенте
Процедура ВыбранныеПоказателиПослеУдаления(Элемент)
	
	МассивВыбора = СформироватьМассив();
	ОграничитьСоставПоказателейЭфективности(МассивВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьИПеренести(Команда)
	
	МассивВыбора = СформироватьМассив();
	Оповестить("ВыборПоказателейДерево",Новый Структура("ОтобранныеПоказатели,УникальныйИдентификатор",МассивВыбора,НомерФормыВладельца));
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПоказателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбранныйПоказатель = Элемент.ТекущиеДанные;
	
	Индекс = 0;
	Пока (Индекс < ВыбранныеПоказатели.Количество ()) Цикл
		Строка = ВыбранныеПоказатели.Получить(Индекс);
		Если ВыбранныйПоказатель = Строка Тогда
			ВыбранныеПоказатели.Удалить(Индекс);
		Иначе
			Индекс = Индекс + 1;
		КонецЕсли;
	КонецЦикла;
	
	ВыбранныеПоказателиПослеУдаления(Элемент);
	
КонецПроцедуры

#КонецОбласти