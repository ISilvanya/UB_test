#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДополнительныеСвойства.Вставить("Отказ", Отказ);
	УБ_ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	//на предыдущем этапе, после подготовки данных, одновременно выполняется проверка возможности проведения
	//и корректности этих подготовленных по общим правилам данных, и там может быть отказ
	Отказ = ДополнительныеСвойства.Отказ;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Документы.УБ_УстановкаФактаПоказателей.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	Отказ = ДополнительныеСвойства.Отказ;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УБ_ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыСведений.УБ_ФактПоПоказателям.ЗаписатьФактПоПоказателям(
		ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаФактПоПоказателям, Движения, Отказ);

	УБ_ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	УБ_ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	УБ_ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	УБ_ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	
	УБ_ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	Если НЕ Отказ Тогда
		УдалитьЗаписиФактПоПоказателям(Ссылка, Отказ);
	КонецЕсли;
	УБ_ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;                    
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		УБ_ПланированиеПоказателейСервер.ПроверитьСоответствиеНазначенийИПоказателей(Расшифровка.Выгрузить(, "показатель, Назначение"), Дата, Отказ);	
	КонецЕсли;
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры        

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();

КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура УдалитьЗаписиФактПоПоказателям(Ссылка, Отказ)  
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УБ_ФактПоПоказателям.показатель КАК показатель,
	|	УБ_ФактПоПоказателям.Назначение КАК Назначение,
	|	УБ_ФактПоПоказателям.ДатаНачала КАК ДатаНачала,
	|	УБ_ФактПоПоказателям.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.УБ_ФактПоПоказателям КАК УБ_ФактПоПоказателям
	|ГДЕ
	|	УБ_ФактПоПоказателям.Документ = &Ссылка"	;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Менеджер = РегистрыСведений.УБ_ФактПоПоказателям.СоздатьНаборЗаписей();
		Менеджер.Отбор.показатель.Установить(Выборка.показатель);
		Менеджер.Отбор.Назначение.Установить(Выборка.Назначение);
		Менеджер.Отбор.ДатаНачала.Установить(Выборка.ДатаНачала);
		Менеджер.Отбор.ДатаОкончания.Установить(Выборка.ДатаОкончания);
		Менеджер.Записать();
	КонецЦикла;    
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли