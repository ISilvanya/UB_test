#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

//Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

//     ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

//КонецПроцедуры                    

#Область ДляВызоваИзДругихПодсистем
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапросаТаблицаПериодовПоказателей(Запрос, ТекстыЗапроса, Регистры);
	
	УБ_ПроведениеСервер.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Руководитель, Утверждает, СтруктураПредприятия");
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СтруктураПредприятия", РеквизитыДокумента.СтруктураПредприятия);
	Запрос.УстановитьПараметр("Контролирует", РеквизитыДокумента.Руководитель);
	Запрос.УстановитьПараметр("Утверждает",   РеквизитыДокумента.Утверждает);
	
КонецПроцедуры

Функция ТекстыЗапросаТаблицаПериодовПоказателей(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПланПоПоказателям";
	
	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	ТекстЗапроса =
	 
		"ВЫБРАТЬ
		|	ТаблицаПериоды.ДатаНачала КАК Период,
		|	ТаблицаПериоды.ДатаНачала КАК ДатаНачала,
		|	ТаблицаПериоды.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаПериоды.Ссылка.ДатаНачала КАК ДатаНачалаНарастающего,
		|	ТаблицаПериоды.Ссылка.ДатаОкончания КАК ДатаОкончанияНарастающего,
		|	ТаблицаПоказатели.ПериодичностьПланирования КАК ПериодичностьПланирования,
		|	ТаблицаПериоды.ТекущееЗначение КАК ТекущееЗначение,
		|	ТаблицаПериоды.НарастающийИтог КАК НарастающийИтог,
		|	(ВЫРАЗИТЬ(ТаблицаПериоды.ТекущееЗначение КАК ЧИСЛО)) * ВЫБОР
		|		КОГДА ТаблицаПоказатели.НегативноеОтклонениеНормыДо = 0
		|			ТОГДА ТаблицаПоказатели.НегативноеОтклонениеНормыДо
		|		ИНАЧЕ ТаблицаПоказатели.НегативноеОтклонениеНормыДо
		|	КОНЕЦ / 100 КАК ТекущееЗначениеНегативноеОтклонениеНормыДо,
		|	(ВЫРАЗИТЬ(ТаблицаПериоды.ТекущееЗначение КАК ЧИСЛО)) * ВЫБОР
		|		КОГДА ТаблицаПоказатели.ПограничноеОтклонениеНормыОт = 0
		|			ТОГДА ТаблицаПоказатели.ПограничноеОтклонениеНормыОт
		|		ИНАЧЕ ТаблицаПоказатели.ПограничноеОтклонениеНормыОт
		|	КОНЕЦ / 100 КАК ТекущееЗначениеПограничноеОтклонениеНормыОт,
		|	(ВЫРАЗИТЬ(ТаблицаПериоды.ТекущееЗначение КАК ЧИСЛО)) * ВЫБОР
		|		КОГДА ТаблицаПоказатели.ПограничноеОтклонениеНормыДо = 0
		|			ТОГДА ТаблицаПоказатели.ПограничноеОтклонениеНормыДо
		|		ИНАЧЕ ТаблицаПоказатели.ПограничноеОтклонениеНормыДо
		|	КОНЕЦ / 100 КАК ТекущееЗначениеПограничноеОтклонениеНормыДо,
		|	(ВЫРАЗИТЬ(ТаблицаПериоды.ТекущееЗначение КАК ЧИСЛО)) * ВЫБОР
		|		КОГДА ТаблицаПоказатели.ПозитивноеОтклонениеНормыОт = 0
		|			ТОГДА ТаблицаПоказатели.ПозитивноеОтклонениеНормыОт
		|		ИНАЧЕ ТаблицаПоказатели.ПозитивноеОтклонениеНормыОт
		|	КОНЕЦ / 100 КАК ТекущееЗначениеПозитивноеОтклонениеНормыОт,
		|	(ВЫРАЗИТЬ(ТаблицаПериоды.НарастающийИтог КАК ЧИСЛО)) * ВЫБОР
		|		КОГДА ТаблицаПоказатели.НегативноеОтклонениеНормыДо = 0
		|			ТОГДА ТаблицаПоказатели.НегативноеОтклонениеНормыДо
		|		ИНАЧЕ ТаблицаПоказатели.НегативноеОтклонениеНормыДо
		|	КОНЕЦ / 100 КАК НарастающийИтогНегативноеОтклонениеНормыДо,
		|	(ВЫРАЗИТЬ(ТаблицаПериоды.НарастающийИтог КАК ЧИСЛО)) * ВЫБОР
		|		КОГДА ТаблицаПоказатели.ПограничноеОтклонениеНормыОт = 0
		|			ТОГДА ТаблицаПоказатели.ПограничноеОтклонениеНормыОт
		|		ИНАЧЕ ТаблицаПоказатели.ПограничноеОтклонениеНормыОт
		|	КОНЕЦ / 100 КАК НарастающийИтогПограничноеОтклонениеНормыОт,
		|	(ВЫРАЗИТЬ(ТаблицаПериоды.НарастающийИтог КАК ЧИСЛО)) * ВЫБОР
		|		КОГДА ТаблицаПоказатели.ПограничноеОтклонениеНормыДо = 0
		|			ТОГДА ТаблицаПоказатели.ПограничноеОтклонениеНормыДо
		|		ИНАЧЕ ТаблицаПоказатели.ПограничноеОтклонениеНормыДо
		|	КОНЕЦ / 100 КАК НарастающийИтогПограничноеОтклонениеНормыДо,
		|	(ВЫРАЗИТЬ(ТаблицаПериоды.НарастающийИтог КАК ЧИСЛО)) * ВЫБОР
		|		КОГДА ТаблицаПоказатели.ПозитивноеОтклонениеНормыОт = 0
		|			ТОГДА ТаблицаПоказатели.ПозитивноеОтклонениеНормыОт
		|		ИНАЧЕ ТаблицаПоказатели.ПозитивноеОтклонениеНормыОт
		|	КОНЕЦ / 100 КАК НарастающийИтогПозитивноеОтклонениеНормыОт,
		|	ТаблицаПоказатели.ПериодичностьКонтроля КАК ПериодичностьКонтроля,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаПоказатели.ПериодичностьКонтроля) КАК ПериодичностьКонтроляСтрока,
		|	ТаблицаНазначения.Назначение КАК Назначение,
		|	ТаблицаНазначения.НазначениеТип КАК НазначениеТип,
		|	ТаблицаПоказатели.Показатель КАК показатель,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаПоказатели.ПериодичностьПланирования) КАК ПериодичностьПланированияСтрока,
		|	&СтруктураПредприятия КАК СтруктураПредприятия,
		|	&Контролирует КАК Контролирует,
		|	&Утверждает КАК Утверждает,
		|	ТаблицаПоказатели.Календарь КАК Календарь,
		|	ТаблицаНазначения.Ссылка.ДатаНачала КАК ДокДатаНачала,
		|	ТаблицаНазначения.Цель КАК Цель
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	Документ.УБ_ПланированиеЦелейИПоказателей.Назначения КАК ТаблицаНазначения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УБ_ПланированиеЦелейИПоказателей.Показатели КАК ТаблицаПоказатели
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УБ_ПланированиеЦелейИПоказателей.ПоказателиПоПериодам КАК ТаблицаПериоды
		|			ПО ТаблицаПоказатели.КлючСвязиСПериодом = ТаблицаПериоды.КлючСвязиСПериодом
		|				И ТаблицаПоказатели.Ссылка = ТаблицаПериоды.Ссылка
		|		ПО ТаблицаНазначения.КлючСвязи = ТаблицаПоказатели.КлючСвязи
		|			И ТаблицаНазначения.Ссылка = ТаблицаПоказатели.Ссылка
		|ГДЕ
		|	ТаблицаПериоды.Ссылка = &Ссылка
		|	И ТаблицаНазначения.Ссылка = &Ссылка
		|	И ТаблицаПоказатели.Ссылка = &Ссылка
		|	И ТаблицаПоказатели.Показатель.ТипЗначенияПоказателя = ""Число""
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Назначение";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
		ТекстЗапроса = "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокТЧ.Назначение КАК Назначение,
		|	ДокТЧ.ДокДатаНачала КАК ДокДатаНачала
		|ПОМЕСТИТЬ втСотрудники
		|ИЗ
		|	ДокТЧ КАК ДокТЧ
		|ГДЕ
		|	ДокТЧ.Назначение ССЫЛКА Справочник.УБ_Сотрудники
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Назначение
		|";                                
		УБ_ОбщегоНазначения.СкорректироватьТекстЗапросаПодТекущуюКонфигурацию(ТекстЗапроса);
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
		ТекстЗапроса = "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСотрудники.Назначение КАК Назначение,
		|	УБ_ДанныеДляПодбораСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Пользователи.Ссылка КАК Пользователь
		|ПОМЕСТИТЬ втДанныеСотрудников
		|ИЗ      
		|	втСотрудники КАК втСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УБ_ДанныеДляПодбораСотрудников КАК УБ_ДанныеДляПодбораСотрудников
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|			ПО УБ_ДанныеДляПодбораСотрудников.ФизическоеЛицо = Пользователи.ФизическоеЛицо
		|		ПО втСотрудники.Назначение = УБ_ДанныеДляПодбораСотрудников.Сотрудник
		|	И УБ_ДанныеДляПодбораСотрудников.Окончание = началопериода(ДАТАВРЕМЯ(3999, 12, 31) , День)
		|ГДЕ
		|	УБ_ДанныеДляПодбораСотрудников.Сотрудник В
		|			(ВЫБРАТЬ
		|				Т.Назначение
		|			ИЗ
		|				втСотрудники КАК Т)
		
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Назначение
		|";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		// затем идет группировка по всем полям, кроме пользователя - 
		// по нему берем максимальное значение - пользователей у одного физического лица, и,
		// следовательно, сотрудника может оказаться несколько, что недопустимо при
		// имеющейся структуре регистров
		
		ТекстЗапроса = "ВЫБРАТЬ
		               |	ДокТЧ.Период КАК Период,
		               |	ДокТЧ.ДатаНачала КАК ДатаНачала,
		               |	ДокТЧ.ДатаОкончания КАК ДатаОкончания,
		               |	ДокТЧ.ДатаНачалаНарастающего КАК ДатаНачалаНарастающего,
		               |	ДокТЧ.ДатаОкончанияНарастающего КАК ДатаОкончанияНарастающего,
		               |	ДокТЧ.ПериодичностьПланирования КАК ПериодичностьПланирования,
		               |	ДокТЧ.ТекущееЗначение КАК ТекущееЗначение,
		               |	ДокТЧ.НарастающийИтог КАК НарастающийИтог,
		               |	ДокТЧ.ТекущееЗначениеНегативноеОтклонениеНормыДо КАК ТекущееЗначениеНегативноеОтклонениеНормыДо,
		               |	ДокТЧ.ТекущееЗначениеПограничноеОтклонениеНормыОт КАК ТекущееЗначениеПограничноеОтклонениеНормыОт,
		               |	ДокТЧ.ТекущееЗначениеПограничноеОтклонениеНормыДо КАК ТекущееЗначениеПограничноеОтклонениеНормыДо,
		               |	ДокТЧ.ТекущееЗначениеПозитивноеОтклонениеНормыОт КАК ТекущееЗначениеПозитивноеОтклонениеНормыОт,
		               |	ДокТЧ.НарастающийИтогНегативноеОтклонениеНормыДо КАК НарастающийИтогНегативноеОтклонениеНормыДо,
		               |	ДокТЧ.НарастающийИтогПограничноеОтклонениеНормыОт КАК НарастающийИтогПограничноеОтклонениеНормыОт,
		               |	ДокТЧ.НарастающийИтогПограничноеОтклонениеНормыДо КАК НарастающийИтогПограничноеОтклонениеНормыДо,
		               |	ДокТЧ.НарастающийИтогПозитивноеОтклонениеНормыОт КАК НарастающийИтогПозитивноеОтклонениеНормыОт,
		               |	ДокТЧ.ПериодичностьКонтроля КАК ПериодичностьКонтроля,
		               |	ДокТЧ.ПериодичностьКонтроляСтрока КАК ПериодичностьКонтроляСтрока,
		               |	ДокТЧ.Назначение КАК Назначение,
		               |	ДокТЧ.показатель КАК показатель,
		               |	ДокТЧ.ПериодичностьПланированияСтрока КАК ПериодичностьПланированияСтрока,
		               |	ДокТЧ.СтруктураПредприятия КАК СтруктураПредприятия,
		               |	ДокТЧ.Контролирует КАК Контролирует,
		               |	ДокТЧ.Утверждает КАК Утверждает,
		               |	ДокТЧ.Календарь КАК Календарь,
		               |	ДокТЧ.ДокДатаНачала КАК ДокДатаНачала,
		               |	втДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		               |	МАКСИМУМ(втДанныеСотрудников.Пользователь) КАК Пользователь,
		               |	ДокТЧ.Цель КАК Цель
		               |ИЗ
		               |	ДокТЧ КАК ДокТЧ
		               |		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеСотрудников КАК втДанныеСотрудников
		               |		ПО ДокТЧ.Назначение = втДанныеСотрудников.Назначение
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ДокТЧ.Период,
		               |	ДокТЧ.ДатаНачала,
		               |	ДокТЧ.ДатаОкончания,
		               |	ДокТЧ.ДатаНачалаНарастающего,
		               |	ДокТЧ.ДатаОкончанияНарастающего,
		               |	ДокТЧ.ПериодичностьКонтроляСтрока,
		               |	ДокТЧ.Календарь,
		               |	ДокТЧ.Утверждает,
		               |	ДокТЧ.ПериодичностьПланированияСтрока,
		               |	ДокТЧ.ДокДатаНачала,
		               |	ДокТЧ.ПериодичностьКонтроля,
		               |	ДокТЧ.Назначение,
		               |	ДокТЧ.показатель,
		               |	ДокТЧ.СтруктураПредприятия,
		               |	ДокТЧ.Контролирует,
		               |	ДокТЧ.НарастающийИтог,
		               |	ДокТЧ.ТекущееЗначениеНегативноеОтклонениеНормыДо,
		               |	ДокТЧ.ТекущееЗначениеПограничноеОтклонениеНормыОт,
		               |	ДокТЧ.ТекущееЗначениеПограничноеОтклонениеНормыДо,
		               |	ДокТЧ.ТекущееЗначениеПозитивноеОтклонениеНормыОт,
		               |	ДокТЧ.НарастающийИтогНегативноеОтклонениеНормыДо,
		               |	ДокТЧ.НарастающийИтогПограничноеОтклонениеНормыОт,
		               |	ДокТЧ.НарастающийИтогПограничноеОтклонениеНормыДо,
		               |	ДокТЧ.НарастающийИтогПозитивноеОтклонениеНормыОт,
		               |	втДанныеСотрудников.ФизическоеЛицо,
		               |	ДокТЧ.ПериодичностьПланирования,
		               |	ДокТЧ.ТекущееЗначение,
		               |	ДокТЧ.Цель";
		//устарело, теперь Показатели только числовые
		//|
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ
		//|	ТаблицаПериоды.ДатаНачала,
		//|	ТаблицаПериоды.Ссылка.ДатаОкончания,
		//|	ТаблицаПериоды.ДатаОкончания,
		//|	ТаблицаПериоды.ДатаНачала,
		//|	ТаблицаПериоды.ДатаОкончания,
		//|	ТаблицаПоказатели.ПериодичностьПланирования,
		//|	ТаблицаПериоды.ТекущееЗначение,
		//|	0,
		//|	0,
		//|	0,
		//|	0,
		//|	0,
		//|	0,
		//|	0,
		//|	0,
		//|	0,
		//|	ТаблицаПоказатели.ПериодичностьКонтроля,
		//|	ПРЕДСТАВЛЕНИЕ(ТаблицаПоказатели.ПериодичностьКонтроля),
		//|	ТаблицаНазначения.Назначение,
		//|	ТаблицаНазначения.НазначениеТип,
		//|	ТаблицаПоказатели.показатель,
		//|	ПРЕДСТАВЛЕНИЕ(ТаблицаПоказатели.ПериодичностьПланирования),
		//|	&СтруктураПредприятия КАК СтруктураПредприятия,
		//|	&Контролирует,
		//|	&Утверждает,     
		//|	ТаблицаПоказатели.Календарь
		//|ИЗ
		//|	Документ.УБ_ПланированиеЦелей.Назначения КАК ТаблицаНазначения
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УБ_ПланированиеЦелей.Показатели КАК ТаблицаПоказатели
		//|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УБ_ПланированиеЦелей.ПоказателиПоПериодам КАК ТаблицаПериоды
		//|			ПО ТаблицаПоказатели.КлючСвязиСПериодом = ТаблицаПериоды.КлючСвязиСПериодом
		//|				И ТаблицаПоказатели.Ссылка = ТаблицаПериоды.Ссылка
		//|		ПО ТаблицаНазначения.КлючСвязи = ТаблицаПоказатели.КлючСвязи
		//|			И ТаблицаНазначения.Ссылка = ТаблицаПоказатели.Ссылка
		//|ГДЕ
		//|	ТаблицаПериоды.Ссылка = &Ссылка
		//|	И ТаблицаНазначения.Ссылка = &Ссылка
		//|	И ТаблицаПоказатели.Ссылка = &Ссылка
		//|	И НЕ ТаблицаПоказатели.показатель.ТипЗначенияПоказателя = ""Число""";

	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстыЗапроса;
		
КонецФункции


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.УБ_ПланированиеЦелейИПоказателей.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "1.0.2.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Комментарий = НСтр("ru = 'Перенос реквизита ""Периодичность контроля"" документа ""Планирование целей и показателей"" в табличную часть'");
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УБ_ПланированиеЦелейИПоказателей.Ссылка КАК Ссылка,
		|	УБ_ПланированиеЦелейИПоказателей.Проведен КАК Проведен
		|ИЗ
		|	Документ.УБ_ПланированиеЦелейИПоказателей КАК УБ_ПланированиеЦелейИПоказателей";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			//1. переносим реквизит документа в ТЧ, на движения это не влияет
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Для каждого Строка Из Документ.Показатели Цикл
				Строка.ПериодичностьКонтроля = Выборка.ПериодичностьКонтроля;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Документ);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось перенести реквизит документа ""Планирование целей и показателей"" ""%1"" по причине: %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения,
				Выборка.Регистратор,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление информационной базы'"),
				УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Регистратор.Метаданные(),
				Выборка.Регистратор,
				ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли      

#Область Заполнение

Процедура ПодготовитьТаблицуПоказателиПоПериодам(Объект, КлючСвязи) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Назначения.Назначение КАК Назначение,
	|	Назначения.КлючСвязи КАК КлючСвязи,
	|	Назначения.НазначениеТип КАК НазначениеТип,
	|	Назначения.Цель КАК Цель
	|ПОМЕСТИТЬ Назначения
	|ИЗ
	|	&Назначения КАК Назначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Показатели.показатель КАК показатель,
	|	Показатели.КлючСвязи КАК КлючСвязи,
	|	Показатели.КлючСвязиСПериодом КАК КлючСвязиСПериодом,
	|	Показатели.Значение КАК Значение,
	|	Показатели.ЕдиноеЗначениеПоказателя КАК ЕдиноеЗначениеПоказателя,
	|	Показатели.СчитатьНарастающийИтог КАК СчитатьНарастающийИтог,
	|	Показатели.РазбитьНаПериоды КАК РазбитьНаПериоды,
	|	Показатели.ПериодичностьПланирования КАК ПериодичностьПланирования,
	|	Показатели.Календарь КАК Календарь
	|ПОМЕСТИТЬ Показатели
	|ИЗ
	|	&Показатели КАК Показатели
	|ГДЕ
	|	ИСТИНА = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Назначения.Назначение КАК Назначение,
	|	Показатели.показатель КАК показатель,
	|	Назначения.НазначениеТип КАК НазначениеТип,
	|	Показатели.Значение КАК Значение,
	|	Показатели.ЕдиноеЗначениеПоказателя КАК ЕдиноеЗначениеПоказателя,
	|	Показатели.СчитатьНарастающийИтог КАК СчитатьНарастающийИтог,
	|	Показатели.РазбитьНаПериоды КАК РазбитьНаПериоды,
	|	Показатели.КлючСвязиСПериодом КАК КлючСвязиСПериодом,
	|	Показатели.ПериодичностьПланирования КАК ПериодичностьПланирования,
	|	Показатели.Календарь КАК Календарь,
	|	Назначения.Цель КАК Цель
	|ИЗ
	|	Назначения КАК Назначения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Показатели КАК Показатели
	|		ПО Назначения.КлючСвязи = Показатели.КлючСвязи"   ;
	
	
	Если НЕ КлючСвязи = Неопределено Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Истина = Истина", "КлючСвязиСПериодом = &КлючСвязи");
		Запрос.УстановитьПараметр("КлючСвязи", КлючСвязи);	
	КонецЕсли;	
	Запрос.УстановитьПараметр("Назначения", Объект.Назначения.Выгрузить());
	Запрос.УстановитьПараметр("Показатели", 		Объект.Показатели.Выгрузить());
	
	Результат = Запрос.Выполнить();    
	Выборка = Результат.Выбрать();      

	Если НЕ Результат.Пустой() и КлючСвязи= Неопределено Тогда
		Объект.ПоказателиПоПериодам.Очистить();
	КонецЕсли;
	Пока Выборка.Следующий() Цикл     
		Если НЕ Результат.Пустой() и НЕ КлючСвязи= Неопределено Тогда
			УБ_ТабличныеЧастиКлиентСервер.УдалитьСтрокиПоКлючуСвязи(Объект.ПоказателиПоПериодам, Выборка, "КлючСвязиСПериодом"); 
		КонецЕсли;

		
		Если 
			//само задание периодичности подразумевает разбивку на периоды
			 НЕ Выборка.ПериодичностьПланирования = ПредопределенноеЗначение("Перечисление.УБ_ПериодыРасчетаМоделиПланирования.Неделя")
			и НЕ Выборка.ПериодичностьПланирования = ПредопределенноеЗначение("Перечисление.УБ_ПериодыРасчетаМоделиПланирования.Произвольный") Тогда
			
			МенеджерВТ = Новый МенеджерВременныхТаблиц;
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("ИспользоватьКонецПериода", Ложь); //тут пока	без вариантов
			ДопПараметры.Вставить("Календарь", Выборка.Календарь); 
			УБ_ОбщегоНазначенияКлиентВызовСервера.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, Объект.ДатаНачала, ОБъект.ДатаОкончания, Выборка.ПериодичностьПланирования ,,, ДопПараметры);	
			
			Запрос.УстановитьПараметр("СчитатьИтог", 				Выборка.СчитатьНарастающийИтог);
			Запрос.УстановитьПараметр("ЕдиноеЗначениеПоказателя", 		Выборка.ЕдиноеЗначениеПоказателя);
			Запрос.УстановитьПараметр("ТекущееЗначение", 			Выборка.Значение);
			
			
			//TODO убрать запрос в цикле!
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВТПериоды.Период КАК Период,
			|	&ТекущееЗначение КАК ТекущееЗначение
			|ПОМЕСТИТЬ ВТПериодыИЗначения
			|ИЗ
			|	ВТПериоды КАК ВТПериоды
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТПериодыИЗначения.Период) КАК Количество
			|ПОМЕСТИТЬ КоличествоПериодов
			|ИЗ
			|	ВТПериодыИЗначения КАК ВТПериодыИЗначения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТПериодыИЗначения.Период КАК Период,
			|	ВЫБОР
			|		КОГДА НЕ &ЕдиноеЗначениеПоказателя
			|			ТОГДА ВТПериодыИЗначения.ТекущееЗначение / КоличествоПериодов.Количество
			|		ИНАЧЕ ВТПериодыИЗначения.ТекущееЗначение
			|	КОНЕЦ КАК ТекущееЗначение,
			|	СУММА(ВЫБОР
			|			КОГДА &СчитатьИтог
			|				ТОГДА ВЫБОР
			|						КОГДА НЕ &ЕдиноеЗначениеПоказателя
			|							ТОГДА ВТПериодыИЗначения.ТекущееЗначение / КоличествоПериодов.Количество
			|						ИНАЧЕ ВТПериодыИЗначения.ТекущееЗначение
			|					КОНЕЦ
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК НарастающийИтог
			|ПОМЕСТИТЬ ВТНарастающийИтог
			|ИЗ
			|	ВТПериодыИЗначения КАК ВТПериодыИЗначения
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыИЗначения КАК ВТПериодыИЗначенияДубль
			|		ПО ВТПериодыИЗначения.Период >= ВТПериодыИЗначенияДубль.Период,
			|	КоличествоПериодов КАК КоличествоПериодов
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТПериодыИЗначения.Период,
			|	ВЫБОР
			|		КОГДА НЕ &ЕдиноеЗначениеПоказателя
			|			ТОГДА ВТПериодыИЗначения.ТекущееЗначение / КоличествоПериодов.Количество
			|		ИНАЧЕ ВТПериодыИЗначения.ТекущееЗначение
			|	КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТНарастающийИтог.Период КАК ДатаНачала,
			|	&СтрокаПолученияКонцаПериода КАК ДатаОкончания,
			|	ВТНарастающийИтог.ТекущееЗначение КАК ТекущееЗначение,
			|	ВТНарастающийИтог.НарастающийИтог КАК НарастающийИтог,
			|	Значение (Справочник.УБ_ПоказателиЭффективности.ПустаяСсылка)КАК показатель,
			|	0 КАК КлючСвязиСПериодом
			|ИЗ
			|	ВТНарастающийИтог КАК ВТНарастающийИтог
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаНачала" ;
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтрокаПолученияКонцаПериода", "КОНЕЦПЕРИОДА(ВТНарастающийИтог.Период, "+Выборка.ПериодичностьПланирования+") "); 
			Результат = Запрос.Выполнить();     
			тРез = Результат.Выгрузить();            
			НазначениеТип= Метаданные.ОпределяемыеТипы.УБ_НазначенияПоказателей.Тип;
			тРез.ЗаполнитьЗначения(Выборка.КлючСвязиСПериодом, "КлючСвязиСПериодом");
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(тРез, Объект.ПоказателиПоПериодам);
		ИначеЕсли
			Выборка.ПериодичностьПланирования = ПредопределенноеЗначение("Перечисление.УБ_ПериодыРасчетаМоделиПланирования.Произвольный") Тогда 
			//для произвольного добавим только одну первую строку
			
			НовСтр = Объект.ПоказателиПоПериодам.Добавить();
			НовСтр.КлючСвязиСПериодом = Выборка.КлючСвязиСПериодом;
			НовСтр.ДатаНачала = Объект.ДатаНачала;
			НовСтр.Датаокончания = Объект.ДатаОкончания;
			НовСтр.ТекущееЗначение = Выборка.Значение;
			НовСтр.НарастающийИтог = ?(Выборка.СчитатьНарастающийИтог, Выборка.Значение, 0);
		ИначеЕсли Выборка.ПериодичностьПланирования = ПредопределенноеЗначение("Перечисление.УБ_ПериодыРасчетаМоделиПланирования.Неделя") Тогда
			расчДатаНачала = Объект.ДатаНачала;
			расчНарастающийИтог = 0;
			Пока расчДатаНачала <= Объект.ДатаОкончания Цикл
				НовСтр = Объект.ПоказателиПоПериодам.Добавить();
				НовСтр.КлючСвязиСПериодом = Выборка.КлючСвязиСПериодом;
				НовСтр.ДатаНачала = расчДатаНачала;
				расчДатаНачала = расчДатаНачала+60*60*24*7;
				НовСтр.ДатаОкончания = расчДатаНачала-1;
				НовСтр.ТекущееЗначение = Выборка.Значение;
				НовСтр.НарастающийИтог = ?(Выборка.СчитатьНарастающийИтог, расчНарастающийИтог+Выборка.Значение, 0);
				расчНарастающийИтог = НовСтр.НарастающийИтог;
			КонецЦикла; 
			
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти   

