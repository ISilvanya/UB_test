#Область ОбработчикиСобытийФормы
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УБ_СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	УстановитьУсловноеОформление();
	// СтандартныеПодсистемы.ПодключаемыеКомагды         
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	//Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры  

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)

    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемы_ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура Подключаемый_ПриИзмененииЭлемента(Элемент)
	СохраняемыеВНастройкахДанныеМодифицированы = Истина; // !!! зачем?
	ОтборПриИзмененииНаСервере(Элемент.Имя);
КонецПроцедуры   

&НаСервере
Процедура ОтборПриИзмененииНаСервере(Элемент)
	УБ_СобытияФорм.ПриИзмененииЭлемента(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ГоризонтПланированияОтборПриИзменении(Элемент)
	СохраняемыеВНастройкахДанныеМодифицированы = Истина;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Горизонт",
		ГоризонтПланирования,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(ГоризонтПланирования));
КонецПроцедуры

&НаКлиенте
Процедура КонтролируетОтборПриИзменении(Элемент)
	СохраняемыеВНастройкахДанныеМодифицированы = Истина;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Ответственный",
		Контролирует,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Контролирует));
КонецПроцедуры

&НаКлиенте
Процедура УтверждаетОтборПриИзменении(Элемент)
	СохраняемыеВНастройкахДанныеМодифицированы = Истина;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Утверждает",
		Утверждает,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Утверждает));
КонецПроцедуры

#КонецОбласти
