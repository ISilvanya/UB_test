#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НЕ Утвержден Тогда 
		 ОбработкаУдаленияПроведения(Отказ);
		Возврат;
	КонецЕсли; 
	
	УБ_ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	Документы.УБ_ПланированиеЦелейИПоказателей.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	УБ_ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыСведений.УБ_ПланПоПоказателям.ЗаписатьЗапланированныеПоказатели(
		ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПланПоПоказателям, Движения, Отказ);
		
	УБ_ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	УБ_ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	УБ_ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	УБ_ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	УБ_ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	УБ_ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
    
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;         
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Утвержден = Ложь;
	ИначеЕсли  РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Запрос = Новый Запрос;     
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ТЧ_Назначения.Назначение КАК Назначение,
		|	ТЧ_Назначения.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ Назначения
		|ИЗ
		|	&ВТ_Назначения КАК ТЧ_Назначения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Показатели.показатель КАК показатель,
		|	ВТ_Показатели.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ Показатели
		|ИЗ
		|	&ВТ_Показатели КАК ВТ_Показатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Назначения.Назначение КАК Назначение,
		|	Показатели.показатель КАК показатель
		|ИЗ
		|	Назначения КАК Назначения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Показатели КАК Показатели
		|		ПО Назначения.КлючСвязи = Показатели.КлючСвязи";
		
		Запрос.УстановитьПараметр("ВТ_Назначения", Назначения.Выгрузить(, "Назначение, КлючСвязи"));
		Запрос.УстановитьПараметр("ВТ_Показатели", Показатели.Выгрузить(, "Показатель, КлючСвязи"));
		УБ_ПланированиеПоказателейСервер.ПроверитьСоответствиеНазначенийИПоказателей(Запрос.Выполнить().Выгрузить(), ДатаНачала, Отказ);
	КонецЕсли;
		
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();

КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();  
	
	//добавим строку по умолчанию с назначением для "Компания"
	СтрОтб = Новый Структура("НазначениеТип", УБ_ОбщегоНазначенияПовтИсп.ЗначениеРеквизитаПоУмолчанию("Компания"));
	Если Назначения.НайтиСтроки(СтрОтб).Количество() = 0 Тогда
		//строка всегда будет присутствовать, а показатель может и не определяться
		НовСтр = Назначения.Добавить();
		НовСтр.Назначение = Справочники.УБ_Компании.Компания;
		НовСтр.НазначениеТип =  УБ_ОбщегоНазначенияПовтИсп.ЗначениеРеквизитаПоУмолчанию("Компания");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// все назначения целей должны принадлежать иерархии Структуры предприятия
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Назначения.Цель КАК Цель,
	|	Назначения.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ втНазначенияОбъекта
	|ИЗ
	|	&Назначения КАК Назначения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Представление(втНазначенияОбъекта.Цель) КАК Цель,
	|	втНазначенияОбъекта.НомерСтроки КАК НомерСтроки,
	|	Представление(втНазначенияОбъекта.Цель.ПринадлежностьЦели) КАК ПринадлежностьЦели
	|ИЗ
	|	втНазначенияОбъекта КАК втНазначенияОбъекта
	|ГДЕ
	|	НЕ втНазначенияОбъекта.Цель.ПринадлежностьЦели В ИЕРАРХИИ (&ПринадлежностьЦели)";

	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПринадлежностьЦели", СтруктураПредприятия);
	Запрос.УстановитьПараметр("Назначения", Назначения.Выгрузить());
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл 
			ПутьКЭлементу = СтрШаблон("Назначения[%1].Цель", Выборка.НомерСтроки - 1);
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Цель %1 принадлежит %2 и не входит в структуру предприятия!", 
															Выборка.Цель, Выборка.ПринадлежностьЦели)
															, ЭтотОбъект, ПутьКЭлементу,, Отказ);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти  

#КонецОбласти

#КонецЕсли      

//TODO ООО 17.11.2022  при удалении подразделения из документа - удалять данные настроек из регистра