
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПодсистемы") Тогда
		Элементы.ИзменитьПодразделениеИМодельПланирования.Заголовок = 
			НСтр("ru = 'Перевести на другую модель планирования'");
		Элементы.Подразделение.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	УБ_СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.ИзменитьПодразделениеИМодельПланирования = Ложь;
	Объект.ИзменитьГрейдСотрудника = Ложь;
	
	ОрганизацияПриИзмененииНаСервере();
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Объект.ИзменитьПодразделениеИМодельПланирования = Ложь;
	Объект.ИзменитьГрейдСотрудника = Ложь;
	
	СотрудникПриИзмененииНаСервере();
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ТекущаяОрганизация", Объект.Организация);
	Отбор.Вставить("МесяцПримененияОтбора", Объект.ДатаПеревода);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("ТекущаяСтрока", Объект.Сотрудник);
	
	ОткрытьФорму("ОбщаяФорма.УБ_ФормаВыбораСотрудника", ПараметрыФормы, Элемент,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		УБ_СобытияФормКлиент.ПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	УБ_СобытияФормКлиент.ПодразделениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьЗаголовокАктуальностиМоделиПланирования();
	
КонецПроцедуры

&НаКлиенте
Процедура МодельПланированияЭффективностиПриИзменении(Элемент)
	
	УстановитьЗаголовокАктуальностиМоделиПланирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПодразделениеИМодельПланированияПриИзменении(Элемент)
	
	Если Объект.ИзменитьПодразделениеИМодельПланирования Тогда
		Объект.ИзменитьГрейдСотрудника = Ложь;
	Иначе
		УстановитьТекущиеКадровыеДанныеСотрудника();
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьГрейдСотрудникаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	УстановитьДоступностьЭлементов(ЭтотОбъект);
	УстановитьЗаголовокАктуальностиМоделиПланирования();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокАктуальностиМоделиПланирования()
	
	УБ_КадровыйУчет.СостояниеМоделиПланированияЭффективности(Объект.МодельПланированияЭффективности,
		Элементы.ТекстМодельЗакрыта);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	СписокЗависимыхРеквизитов = "Подразделение, Сотрудник";
	УБ_ОбщегоНазначения.УстановитьТипЗначенияСвязанныхРеквизитовПоУмолчанию(Объект, СписокЗависимыхРеквизитов);
	УстановитьЗаголовокАктуальностиМоделиПланирования();
	
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	
	УстановитьТекущиеКадровыеДанныеСотрудника();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущиеКадровыеДанныеСотрудника()
	
	ДанныеСотрудников = Неопределено;
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		
		ДанныеСотрудников = УБ_КадровыйУчет.КадровыеДанныеСотрудников(Объект.Сотрудник, НачалоДня(Объект.ДатаПеревода) - 1);
		Если ДанныеСотрудников.Количество() Тогда
			
			ТекущиеКадровыеДанныеСотрудника = ДанныеСотрудников[0];
			Объект.Подразделение = ТекущиеКадровыеДанныеСотрудника.Подразделение;
			Объект.МодельПланированияЭффективности = ТекущиеКадровыеДанныеСотрудника.МодельПланированияЭффективности;
			Объект.Грейд = ТекущиеКадровыеДанныеСотрудника.Грейд;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеСотрудников = Неопределено
		Или ДанныеСотрудников.Количество() = 0 Тогда
		
		Объект.Подразделение = УБ_ОбщегоНазначения.ЗначениеРеквизитаПоУмолчанию("Подразделение");
		Объект.МодельПланированияЭффективности = Справочники.УБ_МоделиПланированияЭффективности.ПустаяСсылка();
		Объект.Грейд = Справочники.УБ_Грейды.ПустаяСсылка();
		
	КонецЕсли;
	
	УстановитьЗаголовокАктуальностиМоделиПланирования();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма)
	
	ИзменитьПодразделениеМодель = Форма.Объект.ИзменитьПодразделениеИМодельПланирования
		И ЗначениеЗаполнено(Форма.Объект.Сотрудник);
	ИзменитьГрейдСотрудника = Форма.Объект.ИзменитьГрейдСотрудника
		И ЗначениеЗаполнено(Форма.Объект.Сотрудник);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Подразделение",
		"Доступность",
		ИзменитьПодразделениеМодель);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"МодельПланированияЭффективности",
		"Доступность",
		ИзменитьПодразделениеМодель);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Грейд",
		"Доступность",
		ИзменитьПодразделениеМодель Или ИзменитьГрейдСотрудника);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ИзменитьГрейдСотрудника",
		"Доступность",
		Не ИзменитьПодразделениеМодель);
	
КонецПроцедуры

#Область СтандартныеПодсистемы_ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не(Объект.ИзменитьПодразделениеИМодельПланирования ИЛИ Объект.ИзменитьГрейдСотрудника) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данные не изменены";
		Сообщение.Сообщить();
		
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


#КонецОбласти

#КонецОбласти