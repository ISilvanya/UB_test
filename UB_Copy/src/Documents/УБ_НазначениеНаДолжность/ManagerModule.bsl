#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаМоделиПланированияСотрудников(Запрос, ТекстыЗапроса, Регистры);
	//ИТС++ ШОО 02.11.2021
	//устарело ТекстЗапросаТаблицаРуководителиПодразделений(Запрос, ТекстыЗапроса, Регистры);	
	//ИТС-- ШОО 02.11.2021
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПодсистемы") Тогда
		ТекстЗапросаТаблицаКадроваяИсторияСотрудников(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	
	УБ_ПроведениеСервер.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.ДатаНазначения КАК ДатаНазначения
		|ИЗ
		|	Документ.УБ_НазначениеНаДолжность КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаРеквизиты = РезультатЗапроса.Выбрать();
	ВыборкаРеквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Организация", ВыборкаРеквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", ВыборкаРеквизиты.Подразделение);
	Запрос.УстановитьПараметр("ДатаНазначения", ВыборкаРеквизиты.ДатаНазначения);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаКадроваяИсторияСотрудников(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "КадроваяИсторияСотрудников";
	
	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&ДатаНазначения КАК Период,
		|	&Организация КАК Организация,
		|	&Подразделение КАК Подразделение,
		|	ТаблицаСотрудники.Сотрудник КАК Сотрудник,
		|	ТаблицаСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РеквизитыМодели.ШтатноеРасписание КАК Позиция,
		|	ВЫБОР
		|		КОГДА РеквизитыМодели.ШтатноеРасписание ССЫЛКА Справочник.УБ_ШтатноеРасписание
		|			ТОГДА ВЫРАЗИТЬ(РеквизитыМодели.ШтатноеРасписание КАК Справочник.УБ_ШтатноеРасписание).Должность
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Должность,
		|	ЗНАЧЕНИЕ(Перечисление.УБ_ВидыКадровыхСобытий.Прием) КАК ВидСобытия
		|ИЗ
		|	Документ.УБ_НазначениеНаДолжность.Сотрудники КАК ТаблицаСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УБ_МоделиПланированияЭффективности КАК РеквизитыМодели
		|		ПО ТаблицаСотрудники.МодельПланированияЭффективности = РеквизитыМодели.Ссылка
		|ГДЕ
		|	ТаблицаСотрудники.Ссылка = &Ссылка";
	
	УБ_ОбщегоНазначения.СкорректироватьТекстЗапросаПодТекущуюКонфигурацию(ТекстЗапроса);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМоделиПланированияСотрудников(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МоделиПланированияСотрудников";
	
	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСотрудники.Ссылка КАК КадровыйДокумент,
		|	&ДатаНазначения КАК Период,
		|	ТаблицаСотрудники.Сотрудник КАК Сотрудник,
		|	ТаблицаСотрудники.МодельПланированияЭффективности КАК МодельПланированияЭффективности,
		|	ТаблицаСотрудники.Грейд КАК Грейд
		|ИЗ
		|	Документ.УБ_НазначениеНаДолжность.Сотрудники КАК ТаблицаСотрудники
		|ГДЕ
		|	ТаблицаСотрудники.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//ИТС++ ШОО 02.11.2021
//устарело
//Функция ТекстЗапросаТаблицаРуководителиПодразделений(Запрос, ТекстыЗапроса, Регистры)
//	
//	ИмяРегистра = "РуководителиПодразделений";
//	
//	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
//		Возврат "";
//	КонецЕсли;
//	
//	ТекстЗапроса = 
//		"ВЫБРАТЬ
//		|	&ДатаНазначения КАК Период,
//		|	&Подразделение КАК Подразделение,
//		|	ТаблицаСотрудники.Ссылка КАК КадровыйДокумент,
//		|	ТаблицаСотрудники.Сотрудник КАК Руководитель
//		|ИЗ
//		|	Документ.УБ_НазначениеНаДолжность.Сотрудники КАК ТаблицаСотрудники
//		|ГДЕ
//		|	ТаблицаСотрудники.Ссылка = &Ссылка
//		|	И ТаблицаСотрудники.МодельПланированияЭффективности.РуководящаяДолжность";
//	
//	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
//	
//	Возврат ТекстЗапроса;
//	
//КонецФункции
//ИТС-- ШОО 02.11.2021 

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли