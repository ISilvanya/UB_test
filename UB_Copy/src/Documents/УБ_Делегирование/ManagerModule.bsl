#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

#КонецОбласти 

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	//Ограничение.Текст =
	//"РазрешитьЧтениеИзменение
	//|ГДЕ
	//|	ЗначениеРазрешено(Подразделение)";
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//     КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для   изменения.
//         См. описание 1 параметра процедуры   ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//     Параметры - Структура - Вспомогательные параметры. Для чтения.
//         См. описание 2 параметра процедуры   ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов,   Параметры) Экспорт	
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции
    
#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
КонецПроцедуры

#КонецОбласти

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапросаТаблицаДелегирования(Запрос, ТекстыЗапроса, Регистры);
	
	УБ_ПроведениеСервер.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
КонецПроцедуры

Функция ТекстыЗапросаТаблицаДелегирования(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДелегированныеСотрудникиПодразделения";
	
	Если Не УБ_ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	УБ_ДелегированиеВидыОпераций.НомерСтроки КАК НомерСтроки,
		|	УБ_ДелегированиеВидыОпераций.ВидОперации КАК ВидОперации
		|ПОМЕСТИТЬ ВТВидыОпераций
		|ИЗ
		|	Документ.УБ_Делегирование.ВидыОпераций КАК УБ_ДелегированиеВидыОпераций
		|ГДЕ
		|	УБ_ДелегированиеВидыОпераций.Ссылка = &Ссылка";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеДокумента.ДатаНачала КАК Период,
		|	ДанныеДокумента.Организация КАК Организация,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.ЗаместительРуководителя КАК ЗаместительРуководителя,
		|	ДанныеДокумента.Сотрудник КАК Пользователь,
		|	ДанныеДокумента.ДатаНачала КАК ДатаНачала,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31, 23, 59, 59)
		|		ИНАЧЕ ДанныеДокумента.ДатаОкончания
		|	КОНЕЦ КАК ДатаОкончания,
		|	ЗНАЧЕНИЕ(Справочник.УБ_Сотрудники.ПустаяСсылка) КАК Сотрудник
		|ПОМЕСТИТЬ ВТЗаписи
		|ИЗ
		|	Документ.УБ_Делегирование КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И ДанныеДокумента.ДелегироватьВсехСотрудников
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.ДатаНачала,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.ЗаместительРуководителя,
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.ДатаНачала,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31, 23, 59, 59)
		|		ИНАЧЕ ДанныеДокумента.ДатаОкончания
		|	КОНЕЦ,
		|	ТаблицаСотрудники.Сотрудник
		|ИЗ
		|	Документ.УБ_Делегирование КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УБ_Делегирование.ДелегируемыеСотрудники КАК ТаблицаСотрудники
		|		ПО ДанныеДокумента.Ссылка = ТаблицаСотрудники.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Ссылка
		|	И НЕ ДанныеДокумента.ДелегироватьВсехСотрудников";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТЗаписи.Период КАК Период,
		|	ВТЗаписи.Организация КАК Организация,
		|	ВТЗаписи.Подразделение КАК Подразделение,
		|	ВТЗаписи.ЗаместительРуководителя КАК ЗаместительРуководителя,
		|	ВТЗаписи.Пользователь КАК Пользователь,
		|	ВТЗаписи.ДатаНачала КАК ДатаНачала,
		|	ВТЗаписи.ДатаОкончания КАК ДатаОкончания,
		|	ВТЗаписи.Сотрудник КАК Сотрудник,
		|	ВидыОпераций.ВидОперации КАК ВидОперации
		|ИЗ
		|	ВТЗаписи КАК ВТЗаписи,
		|	ВТВидыОпераций КАК ВидыОпераций";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстыЗапроса;
		
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбновлениеИнформационнойБазы

Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.УБ_Делегирование.ОбработатьДанныеДляПереходаНаНовуюВерсию_2_0_2_3";
	Обработчик.Версия = "2.0.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Комментарий = НСтр("ru = 'Заполнение нового реквизита документа УБ_Делегирование и соответствующих записей регистра'");

	//Обработчик = Обработчики.Добавить();
	//Обработчик.Процедура = "Документы.УБ_Делегирование.ОбработатьДанныеДляПереходаНаНовуюВерсию_1_0_2_4";
	//Обработчик.Версия = "1.0.2.4";
	//Обработчик.РежимВыполнения = "Отложенно";
	//Обработчик.Комментарий = НСтр("ru = 'Заполнение табличной части ""Список пользователей Заместителя"" документа УБ_Делегирование'");

КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию_2_0_2_3(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УБ_Делегирование.Ссылка КАК Ссылка,
		|	УБ_Делегирование.ЗаместительРуководителя КАК ЗаместительРуководителя,
		|	УБ_Сотрудники.Ссылка КАК Сотрудник
		|ИЗ
		|	Документ.УБ_Делегирование КАК УБ_Делегирование
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УБ_Сотрудники КАК УБ_Сотрудники
		|		ПО УБ_Делегирование.ЗаместительРуководителя.ФизическоеЛицо = УБ_Сотрудники.ФизическоеЛицо
		|ГДЕ
		|	УБ_Делегирование.Сотрудник = ЗНАЧЕНИЕ(Справочник.УБ_Сотрудники.ПустаяСсылка)";
	
	УБ_ОбщегоНазначения.СкорректироватьТекстЗапросаПодТекущуюКонфигурацию(Запрос.Текст);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			//дополним сам документ
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.Сотрудник = Выборка.Сотрудник;
			Документ.Записать(РежимЗаписиДокумента.Запись);
			
			//и записи регистра к нему
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.УБ_ДелегированныеСотрудникиПодразделения.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.УБ_ДелегированныеСотрудникиПодразделения.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
			НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
				Запись.Руководитель = Выборка.Сотрудник;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать движения по регистру ""Назначенные руководители подразделений"" документа ""%1"" по причине: %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения,
				Выборка.Регистратор,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление информационной базы'"),
				УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Регистратор.Метаданные(),
				Выборка.Регистратор,
				ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры


//Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию_1_0_2_4(Параметры) Экспорт
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ РАЗЛИЧНЫЕ
//		|	УБ_Делегирование.Ссылка КАК Ссылка,
//		|	УБ_Делегирование.ЗаместительРуководителя КАК ЗаместительРуководителя,
//		|	УБ_Сотрудники.Ссылка КАК Сотрудник
//		|ИЗ
//		|	Документ.УБ_Делегирование КАК УБ_Делегирование
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УБ_Сотрудники КАК УБ_Сотрудники
//		|		ПО УБ_Делегирование.ЗаместительРуководителя.ФизическоеЛицо = УБ_Сотрудники.ФизическоеЛицо";
//	
//	УБ_ОбщегоНазначения.СкорректироватьТекстЗапросаПодТекущуюКонфигурацию(Запрос.Текст);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	Выборка = РезультатЗапроса.Выбрать();
//	Пока Выборка.Следующий() Цикл
//		
//		НачатьТранзакцию();
//		
//		Попытка
//			
//			//дополним сам документ
//			Документ = Выборка.Ссылка.ПолучитьОбъект();
//			мМассив = Новый Массив(1);
//			мМассив[0] = Документ.Сотрудник;
//			Выборка = УБ_КадровыйУчет.ПолучитьПользователяСотрудника(мМассив).Выбрать();
//			Документ.СписокПользователейЗаместителя.Очистить();
//			Пока Выборка.Следующий() Цикл
//				Строка = Документ.СписокПользователейЗаместителя.Добавить();
//				Строка.Пользователь = Выборка.Пользователь;
//			КонецЦикла;
// 			Документ.Записать(РежимЗаписиДокумента.Запись);
//			
//			ЗафиксироватьТранзакцию();
//		
//		Исключение
//			
//			ОтменитьТранзакцию();
//			
//			ТекстСообщения = НСтр("ru = 'Не удалось заполнить табличную часть ""Список пользователей заместителя документа"" ""%1"" по причине: %2'");
//			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
//				ТекстСообщения,
//				Выборка.Регистратор,
//				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
//			
//			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление информационной базы'"),
//				УровеньЖурналаРегистрации.Предупреждение,
//				Выборка.Регистратор.Метаданные(),
//				Выборка.Регистратор,
//				ТекстСообщения);
//			
//			ВызватьИсключение;
//			
//		КонецПопытки;
//		
//	КонецЦикла;
//	
//КонецПроцедуры


#КонецОбласти

