
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УБ_СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	УстановитьУсловноеОформление();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемы_ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтборШкалаПоказателяПриИзменении(Элемент)
	
	УстановитьОтборСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоказательПриИзменении(Элемент)
	
	УстановитьОтборСписка();	
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
	СписокАктуальныхШкал = СформироватьСписокАктуальныхШкал();
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Ссылка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокАктуальныхШкал;
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.СкрытыйВариантОтчетаЦвет);
	
КонецПроцедуры

&НаСервере
Функция СформироватьСписокАктуальныхШкал()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УБ_ЗначенияШкалыПоказателейСрезПоследних.ШкалаПоказателей КАК ШкалаПоказателей,
	               |	УБ_ЗначенияШкалыПоказателейСрезПоследних.УстановкаЗначенийШкалыПоказателей КАК УстановкаЗначенийШкалыПоказателей
	               |ИЗ
	               |	РегистрСведений.УБ_ЗначенияШкалыПоказателей.СрезПоследних КАК УБ_ЗначенияШкалыПоказателейСрезПоследних";
	Результат = Запрос.Выполнить().Выгрузить();
	МассивАктуальныхШкал = Новый СписокЗначений;
	Для каждого Строка из Результат Цикл
		МассивАктуальныхШкал.Добавить(Строка.УстановкаЗначенийШкалыПоказателей);	
	КонецЦикла;
	
	Возврат МассивАктуальныхШкал;
	
КонецФункции	

&НаСервере
Процедура УстановитьОтборСписка() 
	
	Список.Отбор.Элементы.Очистить();
	
	Если ЗначениеЗаполнено(ОтборШкалаПоказателя) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ШкалаПоказателей");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ОтборШкалаПоказателя;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПоказатель) И Не ЗначениеЗаполнено(ОтборШкалаПоказателя) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ШкалаПоказателей.ПоказательЭффективности");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ОтборПоказатель;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти