
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	СписокТипов = Список.КомпоновщикНастроек.Настройки.Выбор.ДоступныеПоляВыбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Ссылка")).Тип;
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.Источники = СписокТипов;
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ФормаКоманднаяПанель;
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Не ЗначениеЗаполнено(ВывестиПоказателиСоСтатусом) Тогда	
		ВывестиПоказателиСоСтатусом = Перечисления.УБ_СостоянияПоказателейЭффективности.Действует;		
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	УстановитьОтборСписка(ЭтотОбъект);
	
	Элементы.Подразделение.Видимость = ЗначениеЗаполнено(Организация);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
КонецПроцедуры

&НаСервере
Процедура ВывестиПоказателиВАрхивеПриИзмененииНаСервере()
	УстановитьОтборСписка(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВывестиПоказателиВАрхивеПриИзменении(Элемент)
	ВывестиПоказателиВАрхивеПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьПоказателяПриИзменении(Элемент)
	УстановитьОтборСписка(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	УстановитьОтборСписка(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент) 
	Элементы.Подразделение.Видимость = ЗначениеЗаполнено(Организация);
	УстановитьОтборСписка(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежитОрганизацииПриИзменении(Элемент)
	УстановитьОтборСписка(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежитПодразделениюПриИзменении(Элемент)
	УстановитьОтборСписка(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежитСотрудникуПриИзменении(Элемент)
	УстановитьОтборСписка(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Форма)
	
	Список = Форма.Список;
	
	Если ЗначениеЗаполнено(Форма.ВывестиПоказателиСоСтатусом) Тогда 		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СостояниеПоказателя", Форма.ВывестиПоказателиСоСтатусом);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "СостояниеПоказателя");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ПринадлежностьПоказателя) Тогда 		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПринадлежностьПоказателя", Форма.ПринадлежностьПоказателя);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПринадлежностьПоказателя");
	КонецЕсли;  
	
	Если ЗначениеЗаполнено(Форма.Организация) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Организация", Форма.Организация);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Организация");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПодразделениеПринадлежности");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.Организация) И ЗначениеЗаполнено(Форма.Подразделение) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПодразделениеПринадлежности", Форма.Подразделение);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПодразделениеПринадлежности");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СостояниеПоказателя");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.УБ_СостоянияПоказателейЭффективности.Архивный;
	
	ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Список");
	ЗачеркнутыйШрифт = Новый Шрифт(,,,,, Истина);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", ЗачеркнутыйШрифт);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемы_ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

#КонецОбласти

#КонецОбласти
