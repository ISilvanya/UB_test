//TODO ООО 15.11.2021  чтобы видеть иерархический список, требуется отбор по организации
//или отключить подчинение

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
	
	Если Параметры.Свойство("Отбор") Тогда
		
		Если Параметры.Отбор.Свойство("Владелец") Тогда
			
			Организация = Параметры.Отбор.Владелец;
			
		КонецЕсли;	
		
	КонецЕсли;	

	УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения, Организация);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНовыеПодразделенияПриИзменении(Элемент)
	УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения, Организация);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьРасформированныеПодразделенияПриИзменении(Элемент)
	УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения, Организация);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения, Организация);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(ГруппаОтбора, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения, Организация)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ГруппаОтбора, "Сформировано");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ГруппаОтбора, "Расформировано"); 
		
	Если НЕ ПоказыватьНовыеПодразделения Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Сформировано", Истина);
	КонецЕсли;
	
	Если НЕ ПоказыватьРасформированныеПодразделения Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Расформировано", Ложь);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Владелец", Организация, , , ЗначениеЗаполнено(Организация));
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьПодразделениеПоСтруктуреПредприятия(Команда)
	
	ЗаполнитьПодразделенияПоСтруктуреПредприятияНаСервере();
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодразделенияПоСтруктуреПредприятияНаСервере()
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Для создания подразделений необходимо указать организацию!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК ЭлементСтруктурыПредприятия,
		|	СтруктураПредприятия.Наименование КАК Наименование,
		|	СтруктураПредприятия.Родитель КАК Родитель,
		|	СтруктураПредприятия.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ИТОГИ ПО
		|	ЭлементСтруктурыПредприятия ТОЛЬКО ИЕРАРХИЯ";
		
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ТаблицаПодразделений = Новый ТаблицаЗначений;
	ТаблицаПодразделений.Колонки.Добавить("ЭлементСтруктурыПредприятия");
	ТаблицаПодразделений.Колонки.Добавить("Наименование");
	ТаблицаПодразделений.Колонки.Добавить("Родитель");
	ТаблицаПодразделений.Колонки.Добавить("ПометкаУдаления");
	
	Пока Выборка.Следующий() Цикл
		
		СтрТаб = ТаблицаПодразделений.Добавить();
		СтрТаб.ЭлементСтруктурыПредприятия = Выборка.ЭлементСтруктурыПредприятия;
		СтрТаб.Наименование = Выборка.Наименование;
		СтрТаб.Родитель = Выборка.Родитель;
		СтрТаб.ПометкаУдаления = Выборка.ПометкаУдаления;
		
	КонецЦикла;
	
	Для Каждого Подразделение Из ТаблицаПодразделений Цикл
		ЭлементРодителя = ТаблицаПодразделений.Найти(Подразделение.Родитель, "ЭлементСтруктурыПредприятия");
		Если Не ЗначениеЗаполнено(ЭлементРодителя) ИЛИ Не ЭлементРодителя.ПометкаУдаления Тогда		
			Если Не ЗначениеЗаполнено(Справочники.УБ_Подразделения.НайтиПоРеквизиту("СтруктураПредприятия", Подразделение.ЭлементСтруктурыПредприятия))
				И Не Подразделение.ПометкаУдаления Тогда
				НовоеПодразделение = Справочники.УБ_Подразделения.СоздатьЭлемент();
				НовоеПодразделение.Наименование = Подразделение.Наименование;	
				НовоеПодразделение.СтруктураПредприятия = Подразделение.ЭлементСтруктурыПредприятия;
				НовоеПодразделение.Родитель = Справочники.УБ_Подразделения.НайтиПоРеквизиту("СтруктураПредприятия", Подразделение.Родитель);
				НовоеПодразделение.Владелец = Организация;
				НовоеПодразделение.Сформировано = Истина;
				НовоеПодразделение.ДатаСоздания = ДатаСозданияПоУмолчанию(ТекущаяДата());
				НовоеПодразделение.Записать();
			КонецЕсли;
		Иначе  Подразделение.ПометкаУдаления = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Функция ДатаСозданияПоУмолчанию(ДатаСеанса)
	
	Возврат НачалоГода(ДатаСеанса);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемы_ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
