
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрКоманды = Неопределено;
	Если Параметры.Свойство("ПараметрКоманды", ПараметрКоманды)
		И ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.УБ_УтверждениеГрейда") Тогда
		ПараметрыУтвержденияГрейда = ПараметрыУтвержденияГрейда(ПараметрКоманды);
		МодельПланированияЭффективности = ПараметрыУтвержденияГрейда.МодельПланированияЭффективности;
		Грейд = ПараметрыУтвержденияГрейда.Грейд;
		ПерваяВерсияГрейда = ПараметрыУтвержденияГрейда.ПерваяВерсияГрейда;
		ВтораяВерсияГрейда = ПараметрыУтвержденияГрейда.ВтораяВерсияГрейда;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(МодельПланированияЭффективности) Тогда
		МодельПланированияЭффективности = Параметры.МодельПланированияЭффективности;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Грейд) Тогда
		Грейд = Параметры.Грейд;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ПерваяВерсияГрейда) Тогда
		ПерваяВерсияГрейда = Параметры.ПерваяВерсияГрейда;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВтораяВерсияГрейда) Тогда
		ВтораяВерсияГрейда = Параметры.ВтораяВерсияГрейда;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(МодельПланированияЭффективности)
		И ЗначениеЗаполнено(Грейд)
		И ЗначениеЗаполнено(ПерваяВерсияГрейда)
		И ЗначениеЗаполнено(ВтораяВерсияГрейда) Тогда
		
		СформироватьОтчетПоВерсиям();
		
	Иначе
		ТребуетсяОбновитьДанныеОтчета();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(МодельПланированияЭффективности) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Поле ""Модель планирования эффективности"" не заполнено'"), ,
			"МодельПланированияЭффективности", ,
			Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Грейд) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Поле ""Грейд"" не заполнено'"), ,
			"Грейд", ,
			Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПерваяВерсияГрейда) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Поле ""Версия №1"" не заполнено'"), ,
			"ПерваяВерсияГрейда", ,
			Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВтораяВерсияГрейда) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Поле ""Версия №2"" не заполнено'"), ,
			"ВтораяВерсияГрейда", ,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МодельПланированияЭффективностиПриИзменении(Элемент)
	
	ПерваяВерсияГрейда = Неопределено;
	ВтораяВерсияГрейда = Неопределено;
	
	ТребуетсяОбновитьДанныеОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ГрейдПриИзменении(Элемент)
	
	ТребуетсяОбновитьДанныеОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерваяВерсияГрейдаПриИзменении(Элемент)
	
	ТребуетсяОбновитьДанныеОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ВтораяВерсияГрейдаПриИзменении(Элемент)
	
	ТребуетсяОбновитьДанныеОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоОтличияПриИзменении(Элемент)
	
	ТребуетсяОбновитьДанныеОтчета();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьОтчетПоВерсиям();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ТребуетсяОбновитьДанныеОтчета()
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТаблицаОтчета, "Неактуальность");
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетПоВерсиям()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТаблицаОтчета, "ФормированиеОтчета");
	ПодключитьОбработчикОжидания("НачатьФормированиеОтчетаПоВерсиям", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьФормированиеОтчетаПоВерсиям()
	ДлительнаяОперация = СформироватьОтчетПоВерсиямНаСервере();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииФормированияОтчета", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания); 
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетПоВерсиямНаСервере()
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор());
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("МодельПланированияЭффективности", МодельПланированияЭффективности);
	ПараметрыОтчета.Вставить("Грейд", Грейд);
	ПараметрыОтчета.Вставить("ПоказыватьТолькоОтличия", ПоказыватьТолькоОтличия);
	ПараметрыОтчета.Вставить("ПерваяВерсияГрейда", ПерваяВерсияГрейда);
	ПараметрыОтчета.Вставить("ВтораяВерсияГрейда", ВтораяВерсияГрейда);
	Возврат ДлительныеОперации.ВыполнитьВФоне("Обработки.УБ_СравнениеВерсийГрейда.СформироватьОтчетПоВерсиямГрейда",
		ПараметрыОтчета, ПараметрыВыполнения);
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииФормированияОтчета(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.ТаблицаОтчета, "НеИспользовать");
	Если Результат.Статус = "Выполнено" Тогда
		ТаблицаОтчета = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	Иначе
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыУтвержденияГрейда(УтверждениеГрейда)
	
	Параметры = Новый Структура;
	Параметры.Вставить("МодельПланированияЭффективности");
	Параметры.Вставить("Грейд");
	Параметры.Вставить("ПерваяВерсияГрейда");
	Параметры.Вставить("ВтораяВерсияГрейда");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеквизитыДокумента.МодельПланированияЭффективности КАК МодельПланированияЭффективности,
		|	РеквизитыДокумента.Грейд КАК Грейд,
		|	РеквизитыДокумента.ВерсияГрейда КАК ВерсияГрейда
		|ПОМЕСТИТЬ ВТ_РеквизитыДокумента
		|ИЗ
		|	Документ.УБ_УтверждениеГрейда КАК РеквизитыДокумента
		|ГДЕ
		|	РеквизитыДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТекущаяВерсияГрейда.МодельПланированияЭффективности КАК МодельПланированияЭффективности,
		|	ТекущаяВерсияГрейда.Грейд КАК Грейд,
		|	ТекущаяВерсияГрейда.ВерсияГрейда КАК ПерваяВерсияГрейда,
		|	НЕОПРЕДЕЛЕНО КАК ВтораяВерсияГрейда
		|ИЗ
		|	ВТ_РеквизитыДокумента КАК ТекущаяВерсияГрейда
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПредыдущаяВерсияГрейда.МодельПланированияЭффективности,
		|	ПредыдущаяВерсияГрейда.Грейд,
		|	НЕОПРЕДЕЛЕНО,
		|	ПредыдущаяВерсияГрейда.ВерсияГрейда
		|ИЗ
		|	РегистрСведений.УБ_ВерсииГрейдов.СрезПоследних(
		|			&ГраницаВерсии,
		|			(МодельПланированияЭффективности, Грейд, Статус) В
		|				(ВЫБРАТЬ
		|					РеквизитыДокумента.МодельПланированияЭффективности,
		|					РеквизитыДокумента.Грейд,
		|					ЗНАЧЕНИЕ(Перечисление.УБ_СтатусыМоделейПланирования.Действует)
		|				ИЗ
		|					ВТ_РеквизитыДокумента КАК РеквизитыДокумента)) КАК ПредыдущаяВерсияГрейда";
	
	Запрос.УстановитьПараметр("Ссылка", УтверждениеГрейда);
	Запрос.УстановитьПараметр("ГраницаВерсии", Новый Граница(УтверждениеГрейда.ДатаУтверждения, ВидГраницы.Исключая));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(Параметры.МодельПланированияЭффективности) Тогда
				Параметры.МодельПланированияЭффективности = Выборка.МодельПланированияЭффективности;
				Параметры.Грейд = Выборка.Грейд;
			КонецЕсли;
			
			Если Выборка.ПерваяВерсияГрейда <> Неопределено Тогда
				Параметры.ПерваяВерсияГрейда = Выборка.ПерваяВерсияГрейда;
			КонецЕсли;
			
			Если Выборка.ВтораяВерсияГрейда <> Неопределено Тогда
				Параметры.ВтораяВерсияГрейда = Выборка.ВтораяВерсияГрейда;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти